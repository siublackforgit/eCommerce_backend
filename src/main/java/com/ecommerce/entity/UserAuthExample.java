package com.ecommerce.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserAuthExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    public UserAuthExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserauthIdIsNull() {
            addCriterion("USERAUTH_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserauthIdIsNotNull() {
            addCriterion("USERAUTH_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserauthIdEqualTo(Long value) {
            addCriterion("USERAUTH_ID =", value, "userauthId");
            return (Criteria) this;
        }

        public Criteria andUserauthIdNotEqualTo(Long value) {
            addCriterion("USERAUTH_ID <>", value, "userauthId");
            return (Criteria) this;
        }

        public Criteria andUserauthIdGreaterThan(Long value) {
            addCriterion("USERAUTH_ID >", value, "userauthId");
            return (Criteria) this;
        }

        public Criteria andUserauthIdGreaterThanOrEqualTo(Long value) {
            addCriterion("USERAUTH_ID >=", value, "userauthId");
            return (Criteria) this;
        }

        public Criteria andUserauthIdLessThan(Long value) {
            addCriterion("USERAUTH_ID <", value, "userauthId");
            return (Criteria) this;
        }

        public Criteria andUserauthIdLessThanOrEqualTo(Long value) {
            addCriterion("USERAUTH_ID <=", value, "userauthId");
            return (Criteria) this;
        }

        public Criteria andUserauthIdIn(List<Long> values) {
            addCriterion("USERAUTH_ID in", values, "userauthId");
            return (Criteria) this;
        }

        public Criteria andUserauthIdNotIn(List<Long> values) {
            addCriterion("USERAUTH_ID not in", values, "userauthId");
            return (Criteria) this;
        }

        public Criteria andUserauthIdBetween(Long value1, Long value2) {
            addCriterion("USERAUTH_ID between", value1, value2, "userauthId");
            return (Criteria) this;
        }

        public Criteria andUserauthIdNotBetween(Long value1, Long value2) {
            addCriterion("USERAUTH_ID not between", value1, value2, "userauthId");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridIsNull() {
            addCriterion("USERAUTH_USERID is null");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridIsNotNull() {
            addCriterion("USERAUTH_USERID is not null");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridEqualTo(Long value) {
            addCriterion("USERAUTH_USERID =", value, "userauthUserid");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridNotEqualTo(Long value) {
            addCriterion("USERAUTH_USERID <>", value, "userauthUserid");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridGreaterThan(Long value) {
            addCriterion("USERAUTH_USERID >", value, "userauthUserid");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridGreaterThanOrEqualTo(Long value) {
            addCriterion("USERAUTH_USERID >=", value, "userauthUserid");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridLessThan(Long value) {
            addCriterion("USERAUTH_USERID <", value, "userauthUserid");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridLessThanOrEqualTo(Long value) {
            addCriterion("USERAUTH_USERID <=", value, "userauthUserid");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridIn(List<Long> values) {
            addCriterion("USERAUTH_USERID in", values, "userauthUserid");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridNotIn(List<Long> values) {
            addCriterion("USERAUTH_USERID not in", values, "userauthUserid");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridBetween(Long value1, Long value2) {
            addCriterion("USERAUTH_USERID between", value1, value2, "userauthUserid");
            return (Criteria) this;
        }

        public Criteria andUserauthUseridNotBetween(Long value1, Long value2) {
            addCriterion("USERAUTH_USERID not between", value1, value2, "userauthUserid");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeIsNull() {
            addCriterion("USERAUTH_AUTHTYPE is null");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeIsNotNull() {
            addCriterion("USERAUTH_AUTHTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeEqualTo(Integer value) {
            addCriterion("USERAUTH_AUTHTYPE =", value, "userauthAuthtype");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeNotEqualTo(Integer value) {
            addCriterion("USERAUTH_AUTHTYPE <>", value, "userauthAuthtype");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeGreaterThan(Integer value) {
            addCriterion("USERAUTH_AUTHTYPE >", value, "userauthAuthtype");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("USERAUTH_AUTHTYPE >=", value, "userauthAuthtype");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeLessThan(Integer value) {
            addCriterion("USERAUTH_AUTHTYPE <", value, "userauthAuthtype");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeLessThanOrEqualTo(Integer value) {
            addCriterion("USERAUTH_AUTHTYPE <=", value, "userauthAuthtype");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeIn(List<Integer> values) {
            addCriterion("USERAUTH_AUTHTYPE in", values, "userauthAuthtype");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeNotIn(List<Integer> values) {
            addCriterion("USERAUTH_AUTHTYPE not in", values, "userauthAuthtype");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeBetween(Integer value1, Integer value2) {
            addCriterion("USERAUTH_AUTHTYPE between", value1, value2, "userauthAuthtype");
            return (Criteria) this;
        }

        public Criteria andUserauthAuthtypeNotBetween(Integer value1, Integer value2) {
            addCriterion("USERAUTH_AUTHTYPE not between", value1, value2, "userauthAuthtype");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierIsNull() {
            addCriterion("USERAUTH_IDENTIFIER is null");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierIsNotNull() {
            addCriterion("USERAUTH_IDENTIFIER is not null");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierEqualTo(String value) {
            addCriterion("USERAUTH_IDENTIFIER =", value, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierNotEqualTo(String value) {
            addCriterion("USERAUTH_IDENTIFIER <>", value, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierGreaterThan(String value) {
            addCriterion("USERAUTH_IDENTIFIER >", value, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierGreaterThanOrEqualTo(String value) {
            addCriterion("USERAUTH_IDENTIFIER >=", value, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierLessThan(String value) {
            addCriterion("USERAUTH_IDENTIFIER <", value, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierLessThanOrEqualTo(String value) {
            addCriterion("USERAUTH_IDENTIFIER <=", value, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierLike(String value) {
            addCriterion("USERAUTH_IDENTIFIER like", value, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierNotLike(String value) {
            addCriterion("USERAUTH_IDENTIFIER not like", value, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierIn(List<String> values) {
            addCriterion("USERAUTH_IDENTIFIER in", values, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierNotIn(List<String> values) {
            addCriterion("USERAUTH_IDENTIFIER not in", values, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierBetween(String value1, String value2) {
            addCriterion("USERAUTH_IDENTIFIER between", value1, value2, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthIdentifierNotBetween(String value1, String value2) {
            addCriterion("USERAUTH_IDENTIFIER not between", value1, value2, "userauthIdentifier");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordIsNull() {
            addCriterion("USERAUTH_PASSWORD is null");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordIsNotNull() {
            addCriterion("USERAUTH_PASSWORD is not null");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordEqualTo(String value) {
            addCriterion("USERAUTH_PASSWORD =", value, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordNotEqualTo(String value) {
            addCriterion("USERAUTH_PASSWORD <>", value, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordGreaterThan(String value) {
            addCriterion("USERAUTH_PASSWORD >", value, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("USERAUTH_PASSWORD >=", value, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordLessThan(String value) {
            addCriterion("USERAUTH_PASSWORD <", value, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordLessThanOrEqualTo(String value) {
            addCriterion("USERAUTH_PASSWORD <=", value, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordLike(String value) {
            addCriterion("USERAUTH_PASSWORD like", value, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordNotLike(String value) {
            addCriterion("USERAUTH_PASSWORD not like", value, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordIn(List<String> values) {
            addCriterion("USERAUTH_PASSWORD in", values, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordNotIn(List<String> values) {
            addCriterion("USERAUTH_PASSWORD not in", values, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordBetween(String value1, String value2) {
            addCriterion("USERAUTH_PASSWORD between", value1, value2, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthPasswordNotBetween(String value1, String value2) {
            addCriterion("USERAUTH_PASSWORD not between", value1, value2, "userauthPassword");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtIsNull() {
            addCriterion("USERAUTH_CREATED_AT is null");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtIsNotNull() {
            addCriterion("USERAUTH_CREATED_AT is not null");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtEqualTo(Date value) {
            addCriterion("USERAUTH_CREATED_AT =", value, "userauthCreatedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtNotEqualTo(Date value) {
            addCriterion("USERAUTH_CREATED_AT <>", value, "userauthCreatedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtGreaterThan(Date value) {
            addCriterion("USERAUTH_CREATED_AT >", value, "userauthCreatedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("USERAUTH_CREATED_AT >=", value, "userauthCreatedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtLessThan(Date value) {
            addCriterion("USERAUTH_CREATED_AT <", value, "userauthCreatedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("USERAUTH_CREATED_AT <=", value, "userauthCreatedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtIn(List<Date> values) {
            addCriterion("USERAUTH_CREATED_AT in", values, "userauthCreatedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtNotIn(List<Date> values) {
            addCriterion("USERAUTH_CREATED_AT not in", values, "userauthCreatedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtBetween(Date value1, Date value2) {
            addCriterion("USERAUTH_CREATED_AT between", value1, value2, "userauthCreatedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("USERAUTH_CREATED_AT not between", value1, value2, "userauthCreatedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtIsNull() {
            addCriterion("USERAUTH_UPADTED_AT is null");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtIsNotNull() {
            addCriterion("USERAUTH_UPADTED_AT is not null");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtEqualTo(Date value) {
            addCriterion("USERAUTH_UPADTED_AT =", value, "userauthUpadtedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtNotEqualTo(Date value) {
            addCriterion("USERAUTH_UPADTED_AT <>", value, "userauthUpadtedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtGreaterThan(Date value) {
            addCriterion("USERAUTH_UPADTED_AT >", value, "userauthUpadtedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("USERAUTH_UPADTED_AT >=", value, "userauthUpadtedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtLessThan(Date value) {
            addCriterion("USERAUTH_UPADTED_AT <", value, "userauthUpadtedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtLessThanOrEqualTo(Date value) {
            addCriterion("USERAUTH_UPADTED_AT <=", value, "userauthUpadtedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtIn(List<Date> values) {
            addCriterion("USERAUTH_UPADTED_AT in", values, "userauthUpadtedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtNotIn(List<Date> values) {
            addCriterion("USERAUTH_UPADTED_AT not in", values, "userauthUpadtedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtBetween(Date value1, Date value2) {
            addCriterion("USERAUTH_UPADTED_AT between", value1, value2, "userauthUpadtedAt");
            return (Criteria) this;
        }

        public Criteria andUserauthUpadtedAtNotBetween(Date value1, Date value2) {
            addCriterion("USERAUTH_UPADTED_AT not between", value1, value2, "userauthUpadtedAt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userauth
     *
     * @mbg.generated do_not_delete_during_merge Sat Jul 26 08:54:56 HKT 2025
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userauth
     *
     * @mbg.generated Sat Jul 26 08:54:56 HKT 2025
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
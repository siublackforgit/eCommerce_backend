<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecommerce.mapper.HostCacheMapper">
  <resultMap id="BaseResultMap" type="com.ecommerce.model.HostCache">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <id column="IP" jdbcType="VARCHAR" property="ip" />
    <result column="HOST" jdbcType="VARCHAR" property="host" />
    <result column="HOST_VALIDATED" jdbcType="CHAR" property="hostValidated" />
    <result column="SUM_CONNECT_ERRORS" jdbcType="BIGINT" property="sumConnectErrors" />
    <result column="COUNT_HOST_BLOCKED_ERRORS" jdbcType="BIGINT" property="countHostBlockedErrors" />
    <result column="COUNT_NAMEINFO_TRANSIENT_ERRORS" jdbcType="BIGINT" property="countNameinfoTransientErrors" />
    <result column="COUNT_NAMEINFO_PERMANENT_ERRORS" jdbcType="BIGINT" property="countNameinfoPermanentErrors" />
    <result column="COUNT_FORMAT_ERRORS" jdbcType="BIGINT" property="countFormatErrors" />
    <result column="COUNT_ADDRINFO_TRANSIENT_ERRORS" jdbcType="BIGINT" property="countAddrinfoTransientErrors" />
    <result column="COUNT_ADDRINFO_PERMANENT_ERRORS" jdbcType="BIGINT" property="countAddrinfoPermanentErrors" />
    <result column="COUNT_FCRDNS_ERRORS" jdbcType="BIGINT" property="countFcrdnsErrors" />
    <result column="COUNT_HOST_ACL_ERRORS" jdbcType="BIGINT" property="countHostAclErrors" />
    <result column="COUNT_NO_AUTH_PLUGIN_ERRORS" jdbcType="BIGINT" property="countNoAuthPluginErrors" />
    <result column="COUNT_AUTH_PLUGIN_ERRORS" jdbcType="BIGINT" property="countAuthPluginErrors" />
    <result column="COUNT_HANDSHAKE_ERRORS" jdbcType="BIGINT" property="countHandshakeErrors" />
    <result column="COUNT_PROXY_USER_ERRORS" jdbcType="BIGINT" property="countProxyUserErrors" />
    <result column="COUNT_PROXY_USER_ACL_ERRORS" jdbcType="BIGINT" property="countProxyUserAclErrors" />
    <result column="COUNT_AUTHENTICATION_ERRORS" jdbcType="BIGINT" property="countAuthenticationErrors" />
    <result column="COUNT_SSL_ERRORS" jdbcType="BIGINT" property="countSslErrors" />
    <result column="COUNT_MAX_USER_CONNECTIONS_ERRORS" jdbcType="BIGINT" property="countMaxUserConnectionsErrors" />
    <result column="COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS" jdbcType="BIGINT" property="countMaxUserConnectionsPerHourErrors" />
    <result column="COUNT_DEFAULT_DATABASE_ERRORS" jdbcType="BIGINT" property="countDefaultDatabaseErrors" />
    <result column="COUNT_INIT_CONNECT_ERRORS" jdbcType="BIGINT" property="countInitConnectErrors" />
    <result column="COUNT_LOCAL_ERRORS" jdbcType="BIGINT" property="countLocalErrors" />
    <result column="COUNT_UNKNOWN_ERRORS" jdbcType="BIGINT" property="countUnknownErrors" />
    <result column="FIRST_SEEN" jdbcType="TIMESTAMP" property="firstSeen" />
    <result column="LAST_SEEN" jdbcType="TIMESTAMP" property="lastSeen" />
    <result column="FIRST_ERROR_SEEN" jdbcType="TIMESTAMP" property="firstErrorSeen" />
    <result column="LAST_ERROR_SEEN" jdbcType="TIMESTAMP" property="lastErrorSeen" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    IP, HOST, HOST_VALIDATED, SUM_CONNECT_ERRORS, COUNT_HOST_BLOCKED_ERRORS, COUNT_NAMEINFO_TRANSIENT_ERRORS, 
    COUNT_NAMEINFO_PERMANENT_ERRORS, COUNT_FORMAT_ERRORS, COUNT_ADDRINFO_TRANSIENT_ERRORS, 
    COUNT_ADDRINFO_PERMANENT_ERRORS, COUNT_FCRDNS_ERRORS, COUNT_HOST_ACL_ERRORS, COUNT_NO_AUTH_PLUGIN_ERRORS, 
    COUNT_AUTH_PLUGIN_ERRORS, COUNT_HANDSHAKE_ERRORS, COUNT_PROXY_USER_ERRORS, COUNT_PROXY_USER_ACL_ERRORS, 
    COUNT_AUTHENTICATION_ERRORS, COUNT_SSL_ERRORS, COUNT_MAX_USER_CONNECTIONS_ERRORS, 
    COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS, COUNT_DEFAULT_DATABASE_ERRORS, COUNT_INIT_CONNECT_ERRORS, 
    COUNT_LOCAL_ERRORS, COUNT_UNKNOWN_ERRORS, FIRST_SEEN, LAST_SEEN, FIRST_ERROR_SEEN, 
    LAST_ERROR_SEEN
  </sql>
  <select id="selectByExample" parameterType="com.ecommerce.model.HostCacheExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from host_cache
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    select 
    <include refid="Base_Column_List" />
    from host_cache
    where IP = #{ip,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    delete from host_cache
    where IP = #{ip,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ecommerce.model.HostCacheExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    delete from host_cache
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ecommerce.model.HostCache">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    insert into host_cache (IP, HOST, HOST_VALIDATED, 
      SUM_CONNECT_ERRORS, COUNT_HOST_BLOCKED_ERRORS, 
      COUNT_NAMEINFO_TRANSIENT_ERRORS, COUNT_NAMEINFO_PERMANENT_ERRORS, 
      COUNT_FORMAT_ERRORS, COUNT_ADDRINFO_TRANSIENT_ERRORS, 
      COUNT_ADDRINFO_PERMANENT_ERRORS, COUNT_FCRDNS_ERRORS, 
      COUNT_HOST_ACL_ERRORS, COUNT_NO_AUTH_PLUGIN_ERRORS, 
      COUNT_AUTH_PLUGIN_ERRORS, COUNT_HANDSHAKE_ERRORS, 
      COUNT_PROXY_USER_ERRORS, COUNT_PROXY_USER_ACL_ERRORS, 
      COUNT_AUTHENTICATION_ERRORS, COUNT_SSL_ERRORS, 
      COUNT_MAX_USER_CONNECTIONS_ERRORS, COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS, 
      COUNT_DEFAULT_DATABASE_ERRORS, COUNT_INIT_CONNECT_ERRORS, 
      COUNT_LOCAL_ERRORS, COUNT_UNKNOWN_ERRORS, FIRST_SEEN, 
      LAST_SEEN, FIRST_ERROR_SEEN, LAST_ERROR_SEEN
      )
    values (#{ip,jdbcType=VARCHAR}, #{host,jdbcType=VARCHAR}, #{hostValidated,jdbcType=CHAR}, 
      #{sumConnectErrors,jdbcType=BIGINT}, #{countHostBlockedErrors,jdbcType=BIGINT}, 
      #{countNameinfoTransientErrors,jdbcType=BIGINT}, #{countNameinfoPermanentErrors,jdbcType=BIGINT}, 
      #{countFormatErrors,jdbcType=BIGINT}, #{countAddrinfoTransientErrors,jdbcType=BIGINT}, 
      #{countAddrinfoPermanentErrors,jdbcType=BIGINT}, #{countFcrdnsErrors,jdbcType=BIGINT}, 
      #{countHostAclErrors,jdbcType=BIGINT}, #{countNoAuthPluginErrors,jdbcType=BIGINT}, 
      #{countAuthPluginErrors,jdbcType=BIGINT}, #{countHandshakeErrors,jdbcType=BIGINT}, 
      #{countProxyUserErrors,jdbcType=BIGINT}, #{countProxyUserAclErrors,jdbcType=BIGINT}, 
      #{countAuthenticationErrors,jdbcType=BIGINT}, #{countSslErrors,jdbcType=BIGINT}, 
      #{countMaxUserConnectionsErrors,jdbcType=BIGINT}, #{countMaxUserConnectionsPerHourErrors,jdbcType=BIGINT}, 
      #{countDefaultDatabaseErrors,jdbcType=BIGINT}, #{countInitConnectErrors,jdbcType=BIGINT}, 
      #{countLocalErrors,jdbcType=BIGINT}, #{countUnknownErrors,jdbcType=BIGINT}, #{firstSeen,jdbcType=TIMESTAMP}, 
      #{lastSeen,jdbcType=TIMESTAMP}, #{firstErrorSeen,jdbcType=TIMESTAMP}, #{lastErrorSeen,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ecommerce.model.HostCache">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    insert into host_cache
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ip != null">
        IP,
      </if>
      <if test="host != null">
        HOST,
      </if>
      <if test="hostValidated != null">
        HOST_VALIDATED,
      </if>
      <if test="sumConnectErrors != null">
        SUM_CONNECT_ERRORS,
      </if>
      <if test="countHostBlockedErrors != null">
        COUNT_HOST_BLOCKED_ERRORS,
      </if>
      <if test="countNameinfoTransientErrors != null">
        COUNT_NAMEINFO_TRANSIENT_ERRORS,
      </if>
      <if test="countNameinfoPermanentErrors != null">
        COUNT_NAMEINFO_PERMANENT_ERRORS,
      </if>
      <if test="countFormatErrors != null">
        COUNT_FORMAT_ERRORS,
      </if>
      <if test="countAddrinfoTransientErrors != null">
        COUNT_ADDRINFO_TRANSIENT_ERRORS,
      </if>
      <if test="countAddrinfoPermanentErrors != null">
        COUNT_ADDRINFO_PERMANENT_ERRORS,
      </if>
      <if test="countFcrdnsErrors != null">
        COUNT_FCRDNS_ERRORS,
      </if>
      <if test="countHostAclErrors != null">
        COUNT_HOST_ACL_ERRORS,
      </if>
      <if test="countNoAuthPluginErrors != null">
        COUNT_NO_AUTH_PLUGIN_ERRORS,
      </if>
      <if test="countAuthPluginErrors != null">
        COUNT_AUTH_PLUGIN_ERRORS,
      </if>
      <if test="countHandshakeErrors != null">
        COUNT_HANDSHAKE_ERRORS,
      </if>
      <if test="countProxyUserErrors != null">
        COUNT_PROXY_USER_ERRORS,
      </if>
      <if test="countProxyUserAclErrors != null">
        COUNT_PROXY_USER_ACL_ERRORS,
      </if>
      <if test="countAuthenticationErrors != null">
        COUNT_AUTHENTICATION_ERRORS,
      </if>
      <if test="countSslErrors != null">
        COUNT_SSL_ERRORS,
      </if>
      <if test="countMaxUserConnectionsErrors != null">
        COUNT_MAX_USER_CONNECTIONS_ERRORS,
      </if>
      <if test="countMaxUserConnectionsPerHourErrors != null">
        COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS,
      </if>
      <if test="countDefaultDatabaseErrors != null">
        COUNT_DEFAULT_DATABASE_ERRORS,
      </if>
      <if test="countInitConnectErrors != null">
        COUNT_INIT_CONNECT_ERRORS,
      </if>
      <if test="countLocalErrors != null">
        COUNT_LOCAL_ERRORS,
      </if>
      <if test="countUnknownErrors != null">
        COUNT_UNKNOWN_ERRORS,
      </if>
      <if test="firstSeen != null">
        FIRST_SEEN,
      </if>
      <if test="lastSeen != null">
        LAST_SEEN,
      </if>
      <if test="firstErrorSeen != null">
        FIRST_ERROR_SEEN,
      </if>
      <if test="lastErrorSeen != null">
        LAST_ERROR_SEEN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="host != null">
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="hostValidated != null">
        #{hostValidated,jdbcType=CHAR},
      </if>
      <if test="sumConnectErrors != null">
        #{sumConnectErrors,jdbcType=BIGINT},
      </if>
      <if test="countHostBlockedErrors != null">
        #{countHostBlockedErrors,jdbcType=BIGINT},
      </if>
      <if test="countNameinfoTransientErrors != null">
        #{countNameinfoTransientErrors,jdbcType=BIGINT},
      </if>
      <if test="countNameinfoPermanentErrors != null">
        #{countNameinfoPermanentErrors,jdbcType=BIGINT},
      </if>
      <if test="countFormatErrors != null">
        #{countFormatErrors,jdbcType=BIGINT},
      </if>
      <if test="countAddrinfoTransientErrors != null">
        #{countAddrinfoTransientErrors,jdbcType=BIGINT},
      </if>
      <if test="countAddrinfoPermanentErrors != null">
        #{countAddrinfoPermanentErrors,jdbcType=BIGINT},
      </if>
      <if test="countFcrdnsErrors != null">
        #{countFcrdnsErrors,jdbcType=BIGINT},
      </if>
      <if test="countHostAclErrors != null">
        #{countHostAclErrors,jdbcType=BIGINT},
      </if>
      <if test="countNoAuthPluginErrors != null">
        #{countNoAuthPluginErrors,jdbcType=BIGINT},
      </if>
      <if test="countAuthPluginErrors != null">
        #{countAuthPluginErrors,jdbcType=BIGINT},
      </if>
      <if test="countHandshakeErrors != null">
        #{countHandshakeErrors,jdbcType=BIGINT},
      </if>
      <if test="countProxyUserErrors != null">
        #{countProxyUserErrors,jdbcType=BIGINT},
      </if>
      <if test="countProxyUserAclErrors != null">
        #{countProxyUserAclErrors,jdbcType=BIGINT},
      </if>
      <if test="countAuthenticationErrors != null">
        #{countAuthenticationErrors,jdbcType=BIGINT},
      </if>
      <if test="countSslErrors != null">
        #{countSslErrors,jdbcType=BIGINT},
      </if>
      <if test="countMaxUserConnectionsErrors != null">
        #{countMaxUserConnectionsErrors,jdbcType=BIGINT},
      </if>
      <if test="countMaxUserConnectionsPerHourErrors != null">
        #{countMaxUserConnectionsPerHourErrors,jdbcType=BIGINT},
      </if>
      <if test="countDefaultDatabaseErrors != null">
        #{countDefaultDatabaseErrors,jdbcType=BIGINT},
      </if>
      <if test="countInitConnectErrors != null">
        #{countInitConnectErrors,jdbcType=BIGINT},
      </if>
      <if test="countLocalErrors != null">
        #{countLocalErrors,jdbcType=BIGINT},
      </if>
      <if test="countUnknownErrors != null">
        #{countUnknownErrors,jdbcType=BIGINT},
      </if>
      <if test="firstSeen != null">
        #{firstSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="lastSeen != null">
        #{lastSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="firstErrorSeen != null">
        #{firstErrorSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="lastErrorSeen != null">
        #{lastErrorSeen,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ecommerce.model.HostCacheExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    select count(*) from host_cache
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update host_cache
    <set>
      <if test="row.ip != null">
        IP = #{row.ip,jdbcType=VARCHAR},
      </if>
      <if test="row.host != null">
        HOST = #{row.host,jdbcType=VARCHAR},
      </if>
      <if test="row.hostValidated != null">
        HOST_VALIDATED = #{row.hostValidated,jdbcType=CHAR},
      </if>
      <if test="row.sumConnectErrors != null">
        SUM_CONNECT_ERRORS = #{row.sumConnectErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countHostBlockedErrors != null">
        COUNT_HOST_BLOCKED_ERRORS = #{row.countHostBlockedErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countNameinfoTransientErrors != null">
        COUNT_NAMEINFO_TRANSIENT_ERRORS = #{row.countNameinfoTransientErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countNameinfoPermanentErrors != null">
        COUNT_NAMEINFO_PERMANENT_ERRORS = #{row.countNameinfoPermanentErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countFormatErrors != null">
        COUNT_FORMAT_ERRORS = #{row.countFormatErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countAddrinfoTransientErrors != null">
        COUNT_ADDRINFO_TRANSIENT_ERRORS = #{row.countAddrinfoTransientErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countAddrinfoPermanentErrors != null">
        COUNT_ADDRINFO_PERMANENT_ERRORS = #{row.countAddrinfoPermanentErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countFcrdnsErrors != null">
        COUNT_FCRDNS_ERRORS = #{row.countFcrdnsErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countHostAclErrors != null">
        COUNT_HOST_ACL_ERRORS = #{row.countHostAclErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countNoAuthPluginErrors != null">
        COUNT_NO_AUTH_PLUGIN_ERRORS = #{row.countNoAuthPluginErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countAuthPluginErrors != null">
        COUNT_AUTH_PLUGIN_ERRORS = #{row.countAuthPluginErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countHandshakeErrors != null">
        COUNT_HANDSHAKE_ERRORS = #{row.countHandshakeErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countProxyUserErrors != null">
        COUNT_PROXY_USER_ERRORS = #{row.countProxyUserErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countProxyUserAclErrors != null">
        COUNT_PROXY_USER_ACL_ERRORS = #{row.countProxyUserAclErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countAuthenticationErrors != null">
        COUNT_AUTHENTICATION_ERRORS = #{row.countAuthenticationErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countSslErrors != null">
        COUNT_SSL_ERRORS = #{row.countSslErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countMaxUserConnectionsErrors != null">
        COUNT_MAX_USER_CONNECTIONS_ERRORS = #{row.countMaxUserConnectionsErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countMaxUserConnectionsPerHourErrors != null">
        COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS = #{row.countMaxUserConnectionsPerHourErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countDefaultDatabaseErrors != null">
        COUNT_DEFAULT_DATABASE_ERRORS = #{row.countDefaultDatabaseErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countInitConnectErrors != null">
        COUNT_INIT_CONNECT_ERRORS = #{row.countInitConnectErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countLocalErrors != null">
        COUNT_LOCAL_ERRORS = #{row.countLocalErrors,jdbcType=BIGINT},
      </if>
      <if test="row.countUnknownErrors != null">
        COUNT_UNKNOWN_ERRORS = #{row.countUnknownErrors,jdbcType=BIGINT},
      </if>
      <if test="row.firstSeen != null">
        FIRST_SEEN = #{row.firstSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="row.lastSeen != null">
        LAST_SEEN = #{row.lastSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="row.firstErrorSeen != null">
        FIRST_ERROR_SEEN = #{row.firstErrorSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="row.lastErrorSeen != null">
        LAST_ERROR_SEEN = #{row.lastErrorSeen,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update host_cache
    set IP = #{row.ip,jdbcType=VARCHAR},
      HOST = #{row.host,jdbcType=VARCHAR},
      HOST_VALIDATED = #{row.hostValidated,jdbcType=CHAR},
      SUM_CONNECT_ERRORS = #{row.sumConnectErrors,jdbcType=BIGINT},
      COUNT_HOST_BLOCKED_ERRORS = #{row.countHostBlockedErrors,jdbcType=BIGINT},
      COUNT_NAMEINFO_TRANSIENT_ERRORS = #{row.countNameinfoTransientErrors,jdbcType=BIGINT},
      COUNT_NAMEINFO_PERMANENT_ERRORS = #{row.countNameinfoPermanentErrors,jdbcType=BIGINT},
      COUNT_FORMAT_ERRORS = #{row.countFormatErrors,jdbcType=BIGINT},
      COUNT_ADDRINFO_TRANSIENT_ERRORS = #{row.countAddrinfoTransientErrors,jdbcType=BIGINT},
      COUNT_ADDRINFO_PERMANENT_ERRORS = #{row.countAddrinfoPermanentErrors,jdbcType=BIGINT},
      COUNT_FCRDNS_ERRORS = #{row.countFcrdnsErrors,jdbcType=BIGINT},
      COUNT_HOST_ACL_ERRORS = #{row.countHostAclErrors,jdbcType=BIGINT},
      COUNT_NO_AUTH_PLUGIN_ERRORS = #{row.countNoAuthPluginErrors,jdbcType=BIGINT},
      COUNT_AUTH_PLUGIN_ERRORS = #{row.countAuthPluginErrors,jdbcType=BIGINT},
      COUNT_HANDSHAKE_ERRORS = #{row.countHandshakeErrors,jdbcType=BIGINT},
      COUNT_PROXY_USER_ERRORS = #{row.countProxyUserErrors,jdbcType=BIGINT},
      COUNT_PROXY_USER_ACL_ERRORS = #{row.countProxyUserAclErrors,jdbcType=BIGINT},
      COUNT_AUTHENTICATION_ERRORS = #{row.countAuthenticationErrors,jdbcType=BIGINT},
      COUNT_SSL_ERRORS = #{row.countSslErrors,jdbcType=BIGINT},
      COUNT_MAX_USER_CONNECTIONS_ERRORS = #{row.countMaxUserConnectionsErrors,jdbcType=BIGINT},
      COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS = #{row.countMaxUserConnectionsPerHourErrors,jdbcType=BIGINT},
      COUNT_DEFAULT_DATABASE_ERRORS = #{row.countDefaultDatabaseErrors,jdbcType=BIGINT},
      COUNT_INIT_CONNECT_ERRORS = #{row.countInitConnectErrors,jdbcType=BIGINT},
      COUNT_LOCAL_ERRORS = #{row.countLocalErrors,jdbcType=BIGINT},
      COUNT_UNKNOWN_ERRORS = #{row.countUnknownErrors,jdbcType=BIGINT},
      FIRST_SEEN = #{row.firstSeen,jdbcType=TIMESTAMP},
      LAST_SEEN = #{row.lastSeen,jdbcType=TIMESTAMP},
      FIRST_ERROR_SEEN = #{row.firstErrorSeen,jdbcType=TIMESTAMP},
      LAST_ERROR_SEEN = #{row.lastErrorSeen,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ecommerce.model.HostCache">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update host_cache
    <set>
      <if test="host != null">
        HOST = #{host,jdbcType=VARCHAR},
      </if>
      <if test="hostValidated != null">
        HOST_VALIDATED = #{hostValidated,jdbcType=CHAR},
      </if>
      <if test="sumConnectErrors != null">
        SUM_CONNECT_ERRORS = #{sumConnectErrors,jdbcType=BIGINT},
      </if>
      <if test="countHostBlockedErrors != null">
        COUNT_HOST_BLOCKED_ERRORS = #{countHostBlockedErrors,jdbcType=BIGINT},
      </if>
      <if test="countNameinfoTransientErrors != null">
        COUNT_NAMEINFO_TRANSIENT_ERRORS = #{countNameinfoTransientErrors,jdbcType=BIGINT},
      </if>
      <if test="countNameinfoPermanentErrors != null">
        COUNT_NAMEINFO_PERMANENT_ERRORS = #{countNameinfoPermanentErrors,jdbcType=BIGINT},
      </if>
      <if test="countFormatErrors != null">
        COUNT_FORMAT_ERRORS = #{countFormatErrors,jdbcType=BIGINT},
      </if>
      <if test="countAddrinfoTransientErrors != null">
        COUNT_ADDRINFO_TRANSIENT_ERRORS = #{countAddrinfoTransientErrors,jdbcType=BIGINT},
      </if>
      <if test="countAddrinfoPermanentErrors != null">
        COUNT_ADDRINFO_PERMANENT_ERRORS = #{countAddrinfoPermanentErrors,jdbcType=BIGINT},
      </if>
      <if test="countFcrdnsErrors != null">
        COUNT_FCRDNS_ERRORS = #{countFcrdnsErrors,jdbcType=BIGINT},
      </if>
      <if test="countHostAclErrors != null">
        COUNT_HOST_ACL_ERRORS = #{countHostAclErrors,jdbcType=BIGINT},
      </if>
      <if test="countNoAuthPluginErrors != null">
        COUNT_NO_AUTH_PLUGIN_ERRORS = #{countNoAuthPluginErrors,jdbcType=BIGINT},
      </if>
      <if test="countAuthPluginErrors != null">
        COUNT_AUTH_PLUGIN_ERRORS = #{countAuthPluginErrors,jdbcType=BIGINT},
      </if>
      <if test="countHandshakeErrors != null">
        COUNT_HANDSHAKE_ERRORS = #{countHandshakeErrors,jdbcType=BIGINT},
      </if>
      <if test="countProxyUserErrors != null">
        COUNT_PROXY_USER_ERRORS = #{countProxyUserErrors,jdbcType=BIGINT},
      </if>
      <if test="countProxyUserAclErrors != null">
        COUNT_PROXY_USER_ACL_ERRORS = #{countProxyUserAclErrors,jdbcType=BIGINT},
      </if>
      <if test="countAuthenticationErrors != null">
        COUNT_AUTHENTICATION_ERRORS = #{countAuthenticationErrors,jdbcType=BIGINT},
      </if>
      <if test="countSslErrors != null">
        COUNT_SSL_ERRORS = #{countSslErrors,jdbcType=BIGINT},
      </if>
      <if test="countMaxUserConnectionsErrors != null">
        COUNT_MAX_USER_CONNECTIONS_ERRORS = #{countMaxUserConnectionsErrors,jdbcType=BIGINT},
      </if>
      <if test="countMaxUserConnectionsPerHourErrors != null">
        COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS = #{countMaxUserConnectionsPerHourErrors,jdbcType=BIGINT},
      </if>
      <if test="countDefaultDatabaseErrors != null">
        COUNT_DEFAULT_DATABASE_ERRORS = #{countDefaultDatabaseErrors,jdbcType=BIGINT},
      </if>
      <if test="countInitConnectErrors != null">
        COUNT_INIT_CONNECT_ERRORS = #{countInitConnectErrors,jdbcType=BIGINT},
      </if>
      <if test="countLocalErrors != null">
        COUNT_LOCAL_ERRORS = #{countLocalErrors,jdbcType=BIGINT},
      </if>
      <if test="countUnknownErrors != null">
        COUNT_UNKNOWN_ERRORS = #{countUnknownErrors,jdbcType=BIGINT},
      </if>
      <if test="firstSeen != null">
        FIRST_SEEN = #{firstSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="lastSeen != null">
        LAST_SEEN = #{lastSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="firstErrorSeen != null">
        FIRST_ERROR_SEEN = #{firstErrorSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="lastErrorSeen != null">
        LAST_ERROR_SEEN = #{lastErrorSeen,jdbcType=TIMESTAMP},
      </if>
    </set>
    where IP = #{ip,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ecommerce.model.HostCache">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update host_cache
    set HOST = #{host,jdbcType=VARCHAR},
      HOST_VALIDATED = #{hostValidated,jdbcType=CHAR},
      SUM_CONNECT_ERRORS = #{sumConnectErrors,jdbcType=BIGINT},
      COUNT_HOST_BLOCKED_ERRORS = #{countHostBlockedErrors,jdbcType=BIGINT},
      COUNT_NAMEINFO_TRANSIENT_ERRORS = #{countNameinfoTransientErrors,jdbcType=BIGINT},
      COUNT_NAMEINFO_PERMANENT_ERRORS = #{countNameinfoPermanentErrors,jdbcType=BIGINT},
      COUNT_FORMAT_ERRORS = #{countFormatErrors,jdbcType=BIGINT},
      COUNT_ADDRINFO_TRANSIENT_ERRORS = #{countAddrinfoTransientErrors,jdbcType=BIGINT},
      COUNT_ADDRINFO_PERMANENT_ERRORS = #{countAddrinfoPermanentErrors,jdbcType=BIGINT},
      COUNT_FCRDNS_ERRORS = #{countFcrdnsErrors,jdbcType=BIGINT},
      COUNT_HOST_ACL_ERRORS = #{countHostAclErrors,jdbcType=BIGINT},
      COUNT_NO_AUTH_PLUGIN_ERRORS = #{countNoAuthPluginErrors,jdbcType=BIGINT},
      COUNT_AUTH_PLUGIN_ERRORS = #{countAuthPluginErrors,jdbcType=BIGINT},
      COUNT_HANDSHAKE_ERRORS = #{countHandshakeErrors,jdbcType=BIGINT},
      COUNT_PROXY_USER_ERRORS = #{countProxyUserErrors,jdbcType=BIGINT},
      COUNT_PROXY_USER_ACL_ERRORS = #{countProxyUserAclErrors,jdbcType=BIGINT},
      COUNT_AUTHENTICATION_ERRORS = #{countAuthenticationErrors,jdbcType=BIGINT},
      COUNT_SSL_ERRORS = #{countSslErrors,jdbcType=BIGINT},
      COUNT_MAX_USER_CONNECTIONS_ERRORS = #{countMaxUserConnectionsErrors,jdbcType=BIGINT},
      COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS = #{countMaxUserConnectionsPerHourErrors,jdbcType=BIGINT},
      COUNT_DEFAULT_DATABASE_ERRORS = #{countDefaultDatabaseErrors,jdbcType=BIGINT},
      COUNT_INIT_CONNECT_ERRORS = #{countInitConnectErrors,jdbcType=BIGINT},
      COUNT_LOCAL_ERRORS = #{countLocalErrors,jdbcType=BIGINT},
      COUNT_UNKNOWN_ERRORS = #{countUnknownErrors,jdbcType=BIGINT},
      FIRST_SEEN = #{firstSeen,jdbcType=TIMESTAMP},
      LAST_SEEN = #{lastSeen,jdbcType=TIMESTAMP},
      FIRST_ERROR_SEEN = #{firstErrorSeen,jdbcType=TIMESTAMP},
      LAST_ERROR_SEEN = #{lastErrorSeen,jdbcType=TIMESTAMP}
    where IP = #{ip,jdbcType=VARCHAR}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecommerce.mapper.SchemaTableStatisticsMapper">
  <resultMap id="BaseResultMap" type="com.ecommerce.model.SchemaTableStatistics">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <result column="table_schema" jdbcType="VARCHAR" property="tableSchema" />
    <result column="table_name" jdbcType="VARCHAR" property="tableName" />
    <result column="total_latency" jdbcType="VARCHAR" property="totalLatency" />
    <result column="rows_fetched" jdbcType="BIGINT" property="rowsFetched" />
    <result column="fetch_latency" jdbcType="VARCHAR" property="fetchLatency" />
    <result column="rows_inserted" jdbcType="BIGINT" property="rowsInserted" />
    <result column="insert_latency" jdbcType="VARCHAR" property="insertLatency" />
    <result column="rows_updated" jdbcType="BIGINT" property="rowsUpdated" />
    <result column="update_latency" jdbcType="VARCHAR" property="updateLatency" />
    <result column="rows_deleted" jdbcType="BIGINT" property="rowsDeleted" />
    <result column="delete_latency" jdbcType="VARCHAR" property="deleteLatency" />
    <result column="io_read_requests" jdbcType="DECIMAL" property="ioReadRequests" />
    <result column="io_read" jdbcType="VARCHAR" property="ioRead" />
    <result column="io_read_latency" jdbcType="VARCHAR" property="ioReadLatency" />
    <result column="io_write_requests" jdbcType="DECIMAL" property="ioWriteRequests" />
    <result column="io_write" jdbcType="VARCHAR" property="ioWrite" />
    <result column="io_write_latency" jdbcType="VARCHAR" property="ioWriteLatency" />
    <result column="io_misc_requests" jdbcType="DECIMAL" property="ioMiscRequests" />
    <result column="io_misc_latency" jdbcType="VARCHAR" property="ioMiscLatency" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    table_schema, table_name, total_latency, rows_fetched, fetch_latency, rows_inserted, 
    insert_latency, rows_updated, update_latency, rows_deleted, delete_latency, io_read_requests, 
    io_read, io_read_latency, io_write_requests, io_write, io_write_latency, io_misc_requests, 
    io_misc_latency
  </sql>
  <select id="selectByExample" parameterType="com.ecommerce.model.SchemaTableStatisticsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schema_table_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ecommerce.model.SchemaTableStatisticsExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    delete from schema_table_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ecommerce.model.SchemaTableStatistics">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    insert into schema_table_statistics (table_schema, table_name, total_latency, 
      rows_fetched, fetch_latency, rows_inserted, 
      insert_latency, rows_updated, update_latency, 
      rows_deleted, delete_latency, io_read_requests, 
      io_read, io_read_latency, io_write_requests, 
      io_write, io_write_latency, io_misc_requests, 
      io_misc_latency)
    values (#{tableSchema,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, #{totalLatency,jdbcType=VARCHAR}, 
      #{rowsFetched,jdbcType=BIGINT}, #{fetchLatency,jdbcType=VARCHAR}, #{rowsInserted,jdbcType=BIGINT}, 
      #{insertLatency,jdbcType=VARCHAR}, #{rowsUpdated,jdbcType=BIGINT}, #{updateLatency,jdbcType=VARCHAR}, 
      #{rowsDeleted,jdbcType=BIGINT}, #{deleteLatency,jdbcType=VARCHAR}, #{ioReadRequests,jdbcType=DECIMAL}, 
      #{ioRead,jdbcType=VARCHAR}, #{ioReadLatency,jdbcType=VARCHAR}, #{ioWriteRequests,jdbcType=DECIMAL}, 
      #{ioWrite,jdbcType=VARCHAR}, #{ioWriteLatency,jdbcType=VARCHAR}, #{ioMiscRequests,jdbcType=DECIMAL}, 
      #{ioMiscLatency,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ecommerce.model.SchemaTableStatistics">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    insert into schema_table_statistics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tableSchema != null">
        table_schema,
      </if>
      <if test="tableName != null">
        table_name,
      </if>
      <if test="totalLatency != null">
        total_latency,
      </if>
      <if test="rowsFetched != null">
        rows_fetched,
      </if>
      <if test="fetchLatency != null">
        fetch_latency,
      </if>
      <if test="rowsInserted != null">
        rows_inserted,
      </if>
      <if test="insertLatency != null">
        insert_latency,
      </if>
      <if test="rowsUpdated != null">
        rows_updated,
      </if>
      <if test="updateLatency != null">
        update_latency,
      </if>
      <if test="rowsDeleted != null">
        rows_deleted,
      </if>
      <if test="deleteLatency != null">
        delete_latency,
      </if>
      <if test="ioReadRequests != null">
        io_read_requests,
      </if>
      <if test="ioRead != null">
        io_read,
      </if>
      <if test="ioReadLatency != null">
        io_read_latency,
      </if>
      <if test="ioWriteRequests != null">
        io_write_requests,
      </if>
      <if test="ioWrite != null">
        io_write,
      </if>
      <if test="ioWriteLatency != null">
        io_write_latency,
      </if>
      <if test="ioMiscRequests != null">
        io_misc_requests,
      </if>
      <if test="ioMiscLatency != null">
        io_misc_latency,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tableSchema != null">
        #{tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="totalLatency != null">
        #{totalLatency,jdbcType=VARCHAR},
      </if>
      <if test="rowsFetched != null">
        #{rowsFetched,jdbcType=BIGINT},
      </if>
      <if test="fetchLatency != null">
        #{fetchLatency,jdbcType=VARCHAR},
      </if>
      <if test="rowsInserted != null">
        #{rowsInserted,jdbcType=BIGINT},
      </if>
      <if test="insertLatency != null">
        #{insertLatency,jdbcType=VARCHAR},
      </if>
      <if test="rowsUpdated != null">
        #{rowsUpdated,jdbcType=BIGINT},
      </if>
      <if test="updateLatency != null">
        #{updateLatency,jdbcType=VARCHAR},
      </if>
      <if test="rowsDeleted != null">
        #{rowsDeleted,jdbcType=BIGINT},
      </if>
      <if test="deleteLatency != null">
        #{deleteLatency,jdbcType=VARCHAR},
      </if>
      <if test="ioReadRequests != null">
        #{ioReadRequests,jdbcType=DECIMAL},
      </if>
      <if test="ioRead != null">
        #{ioRead,jdbcType=VARCHAR},
      </if>
      <if test="ioReadLatency != null">
        #{ioReadLatency,jdbcType=VARCHAR},
      </if>
      <if test="ioWriteRequests != null">
        #{ioWriteRequests,jdbcType=DECIMAL},
      </if>
      <if test="ioWrite != null">
        #{ioWrite,jdbcType=VARCHAR},
      </if>
      <if test="ioWriteLatency != null">
        #{ioWriteLatency,jdbcType=VARCHAR},
      </if>
      <if test="ioMiscRequests != null">
        #{ioMiscRequests,jdbcType=DECIMAL},
      </if>
      <if test="ioMiscLatency != null">
        #{ioMiscLatency,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ecommerce.model.SchemaTableStatisticsExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    select count(*) from schema_table_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update schema_table_statistics
    <set>
      <if test="row.tableSchema != null">
        table_schema = #{row.tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="row.tableName != null">
        table_name = #{row.tableName,jdbcType=VARCHAR},
      </if>
      <if test="row.totalLatency != null">
        total_latency = #{row.totalLatency,jdbcType=VARCHAR},
      </if>
      <if test="row.rowsFetched != null">
        rows_fetched = #{row.rowsFetched,jdbcType=BIGINT},
      </if>
      <if test="row.fetchLatency != null">
        fetch_latency = #{row.fetchLatency,jdbcType=VARCHAR},
      </if>
      <if test="row.rowsInserted != null">
        rows_inserted = #{row.rowsInserted,jdbcType=BIGINT},
      </if>
      <if test="row.insertLatency != null">
        insert_latency = #{row.insertLatency,jdbcType=VARCHAR},
      </if>
      <if test="row.rowsUpdated != null">
        rows_updated = #{row.rowsUpdated,jdbcType=BIGINT},
      </if>
      <if test="row.updateLatency != null">
        update_latency = #{row.updateLatency,jdbcType=VARCHAR},
      </if>
      <if test="row.rowsDeleted != null">
        rows_deleted = #{row.rowsDeleted,jdbcType=BIGINT},
      </if>
      <if test="row.deleteLatency != null">
        delete_latency = #{row.deleteLatency,jdbcType=VARCHAR},
      </if>
      <if test="row.ioReadRequests != null">
        io_read_requests = #{row.ioReadRequests,jdbcType=DECIMAL},
      </if>
      <if test="row.ioRead != null">
        io_read = #{row.ioRead,jdbcType=VARCHAR},
      </if>
      <if test="row.ioReadLatency != null">
        io_read_latency = #{row.ioReadLatency,jdbcType=VARCHAR},
      </if>
      <if test="row.ioWriteRequests != null">
        io_write_requests = #{row.ioWriteRequests,jdbcType=DECIMAL},
      </if>
      <if test="row.ioWrite != null">
        io_write = #{row.ioWrite,jdbcType=VARCHAR},
      </if>
      <if test="row.ioWriteLatency != null">
        io_write_latency = #{row.ioWriteLatency,jdbcType=VARCHAR},
      </if>
      <if test="row.ioMiscRequests != null">
        io_misc_requests = #{row.ioMiscRequests,jdbcType=DECIMAL},
      </if>
      <if test="row.ioMiscLatency != null">
        io_misc_latency = #{row.ioMiscLatency,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update schema_table_statistics
    set table_schema = #{row.tableSchema,jdbcType=VARCHAR},
      table_name = #{row.tableName,jdbcType=VARCHAR},
      total_latency = #{row.totalLatency,jdbcType=VARCHAR},
      rows_fetched = #{row.rowsFetched,jdbcType=BIGINT},
      fetch_latency = #{row.fetchLatency,jdbcType=VARCHAR},
      rows_inserted = #{row.rowsInserted,jdbcType=BIGINT},
      insert_latency = #{row.insertLatency,jdbcType=VARCHAR},
      rows_updated = #{row.rowsUpdated,jdbcType=BIGINT},
      update_latency = #{row.updateLatency,jdbcType=VARCHAR},
      rows_deleted = #{row.rowsDeleted,jdbcType=BIGINT},
      delete_latency = #{row.deleteLatency,jdbcType=VARCHAR},
      io_read_requests = #{row.ioReadRequests,jdbcType=DECIMAL},
      io_read = #{row.ioRead,jdbcType=VARCHAR},
      io_read_latency = #{row.ioReadLatency,jdbcType=VARCHAR},
      io_write_requests = #{row.ioWriteRequests,jdbcType=DECIMAL},
      io_write = #{row.ioWrite,jdbcType=VARCHAR},
      io_write_latency = #{row.ioWriteLatency,jdbcType=VARCHAR},
      io_misc_requests = #{row.ioMiscRequests,jdbcType=DECIMAL},
      io_misc_latency = #{row.ioMiscLatency,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
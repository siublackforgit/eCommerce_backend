<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecommerce.mapper.SchemaTableLockWaitsMapper">
  <resultMap id="BaseResultMap" type="com.ecommerce.model.SchemaTableLockWaits">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <result column="object_schema" jdbcType="VARCHAR" property="objectSchema" />
    <result column="object_name" jdbcType="VARCHAR" property="objectName" />
    <result column="waiting_thread_id" jdbcType="BIGINT" property="waitingThreadId" />
    <result column="waiting_pid" jdbcType="BIGINT" property="waitingPid" />
    <result column="waiting_lock_type" jdbcType="VARCHAR" property="waitingLockType" />
    <result column="waiting_lock_duration" jdbcType="VARCHAR" property="waitingLockDuration" />
    <result column="waiting_query_secs" jdbcType="BIGINT" property="waitingQuerySecs" />
    <result column="waiting_query_rows_affected" jdbcType="BIGINT" property="waitingQueryRowsAffected" />
    <result column="waiting_query_rows_examined" jdbcType="BIGINT" property="waitingQueryRowsExamined" />
    <result column="blocking_thread_id" jdbcType="BIGINT" property="blockingThreadId" />
    <result column="blocking_pid" jdbcType="BIGINT" property="blockingPid" />
    <result column="blocking_lock_type" jdbcType="VARCHAR" property="blockingLockType" />
    <result column="blocking_lock_duration" jdbcType="VARCHAR" property="blockingLockDuration" />
    <result column="sql_kill_blocking_query" jdbcType="VARCHAR" property="sqlKillBlockingQuery" />
    <result column="sql_kill_blocking_connection" jdbcType="VARCHAR" property="sqlKillBlockingConnection" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ecommerce.model.SchemaTableLockWaitsWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <result column="waiting_account" jdbcType="LONGVARCHAR" property="waitingAccount" />
    <result column="waiting_query" jdbcType="LONGVARCHAR" property="waitingQuery" />
    <result column="blocking_account" jdbcType="LONGVARCHAR" property="blockingAccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    object_schema, object_name, waiting_thread_id, waiting_pid, waiting_lock_type, waiting_lock_duration, 
    waiting_query_secs, waiting_query_rows_affected, waiting_query_rows_examined, blocking_thread_id, 
    blocking_pid, blocking_lock_type, blocking_lock_duration, sql_kill_blocking_query, 
    sql_kill_blocking_connection
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    waiting_account, waiting_query, blocking_account
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ecommerce.model.SchemaTableLockWaitsExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from schema_table_lock_waits
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ecommerce.model.SchemaTableLockWaitsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schema_table_lock_waits
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ecommerce.model.SchemaTableLockWaitsExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    delete from schema_table_lock_waits
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ecommerce.model.SchemaTableLockWaitsWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    insert into schema_table_lock_waits (object_schema, object_name, waiting_thread_id, 
      waiting_pid, waiting_lock_type, waiting_lock_duration, 
      waiting_query_secs, waiting_query_rows_affected, 
      waiting_query_rows_examined, blocking_thread_id, 
      blocking_pid, blocking_lock_type, blocking_lock_duration, 
      sql_kill_blocking_query, sql_kill_blocking_connection, 
      waiting_account, waiting_query, blocking_account
      )
    values (#{objectSchema,jdbcType=VARCHAR}, #{objectName,jdbcType=VARCHAR}, #{waitingThreadId,jdbcType=BIGINT}, 
      #{waitingPid,jdbcType=BIGINT}, #{waitingLockType,jdbcType=VARCHAR}, #{waitingLockDuration,jdbcType=VARCHAR}, 
      #{waitingQuerySecs,jdbcType=BIGINT}, #{waitingQueryRowsAffected,jdbcType=BIGINT}, 
      #{waitingQueryRowsExamined,jdbcType=BIGINT}, #{blockingThreadId,jdbcType=BIGINT}, 
      #{blockingPid,jdbcType=BIGINT}, #{blockingLockType,jdbcType=VARCHAR}, #{blockingLockDuration,jdbcType=VARCHAR}, 
      #{sqlKillBlockingQuery,jdbcType=VARCHAR}, #{sqlKillBlockingConnection,jdbcType=VARCHAR}, 
      #{waitingAccount,jdbcType=LONGVARCHAR}, #{waitingQuery,jdbcType=LONGVARCHAR}, #{blockingAccount,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ecommerce.model.SchemaTableLockWaitsWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    insert into schema_table_lock_waits
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="objectSchema != null">
        object_schema,
      </if>
      <if test="objectName != null">
        object_name,
      </if>
      <if test="waitingThreadId != null">
        waiting_thread_id,
      </if>
      <if test="waitingPid != null">
        waiting_pid,
      </if>
      <if test="waitingLockType != null">
        waiting_lock_type,
      </if>
      <if test="waitingLockDuration != null">
        waiting_lock_duration,
      </if>
      <if test="waitingQuerySecs != null">
        waiting_query_secs,
      </if>
      <if test="waitingQueryRowsAffected != null">
        waiting_query_rows_affected,
      </if>
      <if test="waitingQueryRowsExamined != null">
        waiting_query_rows_examined,
      </if>
      <if test="blockingThreadId != null">
        blocking_thread_id,
      </if>
      <if test="blockingPid != null">
        blocking_pid,
      </if>
      <if test="blockingLockType != null">
        blocking_lock_type,
      </if>
      <if test="blockingLockDuration != null">
        blocking_lock_duration,
      </if>
      <if test="sqlKillBlockingQuery != null">
        sql_kill_blocking_query,
      </if>
      <if test="sqlKillBlockingConnection != null">
        sql_kill_blocking_connection,
      </if>
      <if test="waitingAccount != null">
        waiting_account,
      </if>
      <if test="waitingQuery != null">
        waiting_query,
      </if>
      <if test="blockingAccount != null">
        blocking_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="objectSchema != null">
        #{objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null">
        #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="waitingThreadId != null">
        #{waitingThreadId,jdbcType=BIGINT},
      </if>
      <if test="waitingPid != null">
        #{waitingPid,jdbcType=BIGINT},
      </if>
      <if test="waitingLockType != null">
        #{waitingLockType,jdbcType=VARCHAR},
      </if>
      <if test="waitingLockDuration != null">
        #{waitingLockDuration,jdbcType=VARCHAR},
      </if>
      <if test="waitingQuerySecs != null">
        #{waitingQuerySecs,jdbcType=BIGINT},
      </if>
      <if test="waitingQueryRowsAffected != null">
        #{waitingQueryRowsAffected,jdbcType=BIGINT},
      </if>
      <if test="waitingQueryRowsExamined != null">
        #{waitingQueryRowsExamined,jdbcType=BIGINT},
      </if>
      <if test="blockingThreadId != null">
        #{blockingThreadId,jdbcType=BIGINT},
      </if>
      <if test="blockingPid != null">
        #{blockingPid,jdbcType=BIGINT},
      </if>
      <if test="blockingLockType != null">
        #{blockingLockType,jdbcType=VARCHAR},
      </if>
      <if test="blockingLockDuration != null">
        #{blockingLockDuration,jdbcType=VARCHAR},
      </if>
      <if test="sqlKillBlockingQuery != null">
        #{sqlKillBlockingQuery,jdbcType=VARCHAR},
      </if>
      <if test="sqlKillBlockingConnection != null">
        #{sqlKillBlockingConnection,jdbcType=VARCHAR},
      </if>
      <if test="waitingAccount != null">
        #{waitingAccount,jdbcType=LONGVARCHAR},
      </if>
      <if test="waitingQuery != null">
        #{waitingQuery,jdbcType=LONGVARCHAR},
      </if>
      <if test="blockingAccount != null">
        #{blockingAccount,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ecommerce.model.SchemaTableLockWaitsExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    select count(*) from schema_table_lock_waits
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update schema_table_lock_waits
    <set>
      <if test="row.objectSchema != null">
        object_schema = #{row.objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="row.objectName != null">
        object_name = #{row.objectName,jdbcType=VARCHAR},
      </if>
      <if test="row.waitingThreadId != null">
        waiting_thread_id = #{row.waitingThreadId,jdbcType=BIGINT},
      </if>
      <if test="row.waitingPid != null">
        waiting_pid = #{row.waitingPid,jdbcType=BIGINT},
      </if>
      <if test="row.waitingLockType != null">
        waiting_lock_type = #{row.waitingLockType,jdbcType=VARCHAR},
      </if>
      <if test="row.waitingLockDuration != null">
        waiting_lock_duration = #{row.waitingLockDuration,jdbcType=VARCHAR},
      </if>
      <if test="row.waitingQuerySecs != null">
        waiting_query_secs = #{row.waitingQuerySecs,jdbcType=BIGINT},
      </if>
      <if test="row.waitingQueryRowsAffected != null">
        waiting_query_rows_affected = #{row.waitingQueryRowsAffected,jdbcType=BIGINT},
      </if>
      <if test="row.waitingQueryRowsExamined != null">
        waiting_query_rows_examined = #{row.waitingQueryRowsExamined,jdbcType=BIGINT},
      </if>
      <if test="row.blockingThreadId != null">
        blocking_thread_id = #{row.blockingThreadId,jdbcType=BIGINT},
      </if>
      <if test="row.blockingPid != null">
        blocking_pid = #{row.blockingPid,jdbcType=BIGINT},
      </if>
      <if test="row.blockingLockType != null">
        blocking_lock_type = #{row.blockingLockType,jdbcType=VARCHAR},
      </if>
      <if test="row.blockingLockDuration != null">
        blocking_lock_duration = #{row.blockingLockDuration,jdbcType=VARCHAR},
      </if>
      <if test="row.sqlKillBlockingQuery != null">
        sql_kill_blocking_query = #{row.sqlKillBlockingQuery,jdbcType=VARCHAR},
      </if>
      <if test="row.sqlKillBlockingConnection != null">
        sql_kill_blocking_connection = #{row.sqlKillBlockingConnection,jdbcType=VARCHAR},
      </if>
      <if test="row.waitingAccount != null">
        waiting_account = #{row.waitingAccount,jdbcType=LONGVARCHAR},
      </if>
      <if test="row.waitingQuery != null">
        waiting_query = #{row.waitingQuery,jdbcType=LONGVARCHAR},
      </if>
      <if test="row.blockingAccount != null">
        blocking_account = #{row.blockingAccount,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update schema_table_lock_waits
    set object_schema = #{row.objectSchema,jdbcType=VARCHAR},
      object_name = #{row.objectName,jdbcType=VARCHAR},
      waiting_thread_id = #{row.waitingThreadId,jdbcType=BIGINT},
      waiting_pid = #{row.waitingPid,jdbcType=BIGINT},
      waiting_lock_type = #{row.waitingLockType,jdbcType=VARCHAR},
      waiting_lock_duration = #{row.waitingLockDuration,jdbcType=VARCHAR},
      waiting_query_secs = #{row.waitingQuerySecs,jdbcType=BIGINT},
      waiting_query_rows_affected = #{row.waitingQueryRowsAffected,jdbcType=BIGINT},
      waiting_query_rows_examined = #{row.waitingQueryRowsExamined,jdbcType=BIGINT},
      blocking_thread_id = #{row.blockingThreadId,jdbcType=BIGINT},
      blocking_pid = #{row.blockingPid,jdbcType=BIGINT},
      blocking_lock_type = #{row.blockingLockType,jdbcType=VARCHAR},
      blocking_lock_duration = #{row.blockingLockDuration,jdbcType=VARCHAR},
      sql_kill_blocking_query = #{row.sqlKillBlockingQuery,jdbcType=VARCHAR},
      sql_kill_blocking_connection = #{row.sqlKillBlockingConnection,jdbcType=VARCHAR},
      waiting_account = #{row.waitingAccount,jdbcType=LONGVARCHAR},
      waiting_query = #{row.waitingQuery,jdbcType=LONGVARCHAR},
      blocking_account = #{row.blockingAccount,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update schema_table_lock_waits
    set object_schema = #{row.objectSchema,jdbcType=VARCHAR},
      object_name = #{row.objectName,jdbcType=VARCHAR},
      waiting_thread_id = #{row.waitingThreadId,jdbcType=BIGINT},
      waiting_pid = #{row.waitingPid,jdbcType=BIGINT},
      waiting_lock_type = #{row.waitingLockType,jdbcType=VARCHAR},
      waiting_lock_duration = #{row.waitingLockDuration,jdbcType=VARCHAR},
      waiting_query_secs = #{row.waitingQuerySecs,jdbcType=BIGINT},
      waiting_query_rows_affected = #{row.waitingQueryRowsAffected,jdbcType=BIGINT},
      waiting_query_rows_examined = #{row.waitingQueryRowsExamined,jdbcType=BIGINT},
      blocking_thread_id = #{row.blockingThreadId,jdbcType=BIGINT},
      blocking_pid = #{row.blockingPid,jdbcType=BIGINT},
      blocking_lock_type = #{row.blockingLockType,jdbcType=VARCHAR},
      blocking_lock_duration = #{row.blockingLockDuration,jdbcType=VARCHAR},
      sql_kill_blocking_query = #{row.sqlKillBlockingQuery,jdbcType=VARCHAR},
      sql_kill_blocking_connection = #{row.sqlKillBlockingConnection,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
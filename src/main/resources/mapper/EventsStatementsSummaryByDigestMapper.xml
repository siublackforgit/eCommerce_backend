<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecommerce.mapper.EventsStatementsSummaryByDigestMapper">
  <resultMap id="BaseResultMap" type="com.ecommerce.model.EventsStatementsSummaryByDigest">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <result column="SCHEMA_NAME" jdbcType="VARCHAR" property="schemaName" />
    <result column="DIGEST" jdbcType="VARCHAR" property="digest" />
    <result column="COUNT_STAR" jdbcType="BIGINT" property="countStar" />
    <result column="SUM_TIMER_WAIT" jdbcType="BIGINT" property="sumTimerWait" />
    <result column="MIN_TIMER_WAIT" jdbcType="BIGINT" property="minTimerWait" />
    <result column="AVG_TIMER_WAIT" jdbcType="BIGINT" property="avgTimerWait" />
    <result column="MAX_TIMER_WAIT" jdbcType="BIGINT" property="maxTimerWait" />
    <result column="SUM_LOCK_TIME" jdbcType="BIGINT" property="sumLockTime" />
    <result column="SUM_ERRORS" jdbcType="BIGINT" property="sumErrors" />
    <result column="SUM_WARNINGS" jdbcType="BIGINT" property="sumWarnings" />
    <result column="SUM_ROWS_AFFECTED" jdbcType="BIGINT" property="sumRowsAffected" />
    <result column="SUM_ROWS_SENT" jdbcType="BIGINT" property="sumRowsSent" />
    <result column="SUM_ROWS_EXAMINED" jdbcType="BIGINT" property="sumRowsExamined" />
    <result column="SUM_CREATED_TMP_DISK_TABLES" jdbcType="BIGINT" property="sumCreatedTmpDiskTables" />
    <result column="SUM_CREATED_TMP_TABLES" jdbcType="BIGINT" property="sumCreatedTmpTables" />
    <result column="SUM_SELECT_FULL_JOIN" jdbcType="BIGINT" property="sumSelectFullJoin" />
    <result column="SUM_SELECT_FULL_RANGE_JOIN" jdbcType="BIGINT" property="sumSelectFullRangeJoin" />
    <result column="SUM_SELECT_RANGE" jdbcType="BIGINT" property="sumSelectRange" />
    <result column="SUM_SELECT_RANGE_CHECK" jdbcType="BIGINT" property="sumSelectRangeCheck" />
    <result column="SUM_SELECT_SCAN" jdbcType="BIGINT" property="sumSelectScan" />
    <result column="SUM_SORT_MERGE_PASSES" jdbcType="BIGINT" property="sumSortMergePasses" />
    <result column="SUM_SORT_RANGE" jdbcType="BIGINT" property="sumSortRange" />
    <result column="SUM_SORT_ROWS" jdbcType="BIGINT" property="sumSortRows" />
    <result column="SUM_SORT_SCAN" jdbcType="BIGINT" property="sumSortScan" />
    <result column="SUM_NO_INDEX_USED" jdbcType="BIGINT" property="sumNoIndexUsed" />
    <result column="SUM_NO_GOOD_INDEX_USED" jdbcType="BIGINT" property="sumNoGoodIndexUsed" />
    <result column="SUM_CPU_TIME" jdbcType="BIGINT" property="sumCpuTime" />
    <result column="MAX_CONTROLLED_MEMORY" jdbcType="BIGINT" property="maxControlledMemory" />
    <result column="MAX_TOTAL_MEMORY" jdbcType="BIGINT" property="maxTotalMemory" />
    <result column="COUNT_SECONDARY" jdbcType="BIGINT" property="countSecondary" />
    <result column="FIRST_SEEN" jdbcType="TIMESTAMP" property="firstSeen" />
    <result column="LAST_SEEN" jdbcType="TIMESTAMP" property="lastSeen" />
    <result column="QUANTILE_95" jdbcType="BIGINT" property="quantile95" />
    <result column="QUANTILE_99" jdbcType="BIGINT" property="quantile99" />
    <result column="QUANTILE_999" jdbcType="BIGINT" property="quantile999" />
    <result column="QUERY_SAMPLE_SEEN" jdbcType="TIMESTAMP" property="querySampleSeen" />
    <result column="QUERY_SAMPLE_TIMER_WAIT" jdbcType="BIGINT" property="querySampleTimerWait" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ecommerce.model.EventsStatementsSummaryByDigestWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <result column="DIGEST_TEXT" jdbcType="LONGVARCHAR" property="digestText" />
    <result column="QUERY_SAMPLE_TEXT" jdbcType="LONGVARCHAR" property="querySampleText" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    SCHEMA_NAME, DIGEST, COUNT_STAR, SUM_TIMER_WAIT, MIN_TIMER_WAIT, AVG_TIMER_WAIT, 
    MAX_TIMER_WAIT, SUM_LOCK_TIME, SUM_ERRORS, SUM_WARNINGS, SUM_ROWS_AFFECTED, SUM_ROWS_SENT, 
    SUM_ROWS_EXAMINED, SUM_CREATED_TMP_DISK_TABLES, SUM_CREATED_TMP_TABLES, SUM_SELECT_FULL_JOIN, 
    SUM_SELECT_FULL_RANGE_JOIN, SUM_SELECT_RANGE, SUM_SELECT_RANGE_CHECK, SUM_SELECT_SCAN, 
    SUM_SORT_MERGE_PASSES, SUM_SORT_RANGE, SUM_SORT_ROWS, SUM_SORT_SCAN, SUM_NO_INDEX_USED, 
    SUM_NO_GOOD_INDEX_USED, SUM_CPU_TIME, MAX_CONTROLLED_MEMORY, MAX_TOTAL_MEMORY, COUNT_SECONDARY, 
    FIRST_SEEN, LAST_SEEN, QUANTILE_95, QUANTILE_99, QUANTILE_999, QUERY_SAMPLE_SEEN, 
    QUERY_SAMPLE_TIMER_WAIT
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    DIGEST_TEXT, QUERY_SAMPLE_TEXT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ecommerce.model.EventsStatementsSummaryByDigestExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from events_statements_summary_by_digest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ecommerce.model.EventsStatementsSummaryByDigestExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from events_statements_summary_by_digest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ecommerce.model.EventsStatementsSummaryByDigestExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    delete from events_statements_summary_by_digest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ecommerce.model.EventsStatementsSummaryByDigestWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    insert into events_statements_summary_by_digest (SCHEMA_NAME, DIGEST, COUNT_STAR, 
      SUM_TIMER_WAIT, MIN_TIMER_WAIT, AVG_TIMER_WAIT, 
      MAX_TIMER_WAIT, SUM_LOCK_TIME, SUM_ERRORS, 
      SUM_WARNINGS, SUM_ROWS_AFFECTED, SUM_ROWS_SENT, 
      SUM_ROWS_EXAMINED, SUM_CREATED_TMP_DISK_TABLES, 
      SUM_CREATED_TMP_TABLES, SUM_SELECT_FULL_JOIN, SUM_SELECT_FULL_RANGE_JOIN, 
      SUM_SELECT_RANGE, SUM_SELECT_RANGE_CHECK, SUM_SELECT_SCAN, 
      SUM_SORT_MERGE_PASSES, SUM_SORT_RANGE, SUM_SORT_ROWS, 
      SUM_SORT_SCAN, SUM_NO_INDEX_USED, SUM_NO_GOOD_INDEX_USED, 
      SUM_CPU_TIME, MAX_CONTROLLED_MEMORY, MAX_TOTAL_MEMORY, 
      COUNT_SECONDARY, FIRST_SEEN, LAST_SEEN, 
      QUANTILE_95, QUANTILE_99, QUANTILE_999, 
      QUERY_SAMPLE_SEEN, QUERY_SAMPLE_TIMER_WAIT, 
      DIGEST_TEXT, QUERY_SAMPLE_TEXT)
    values (#{schemaName,jdbcType=VARCHAR}, #{digest,jdbcType=VARCHAR}, #{countStar,jdbcType=BIGINT}, 
      #{sumTimerWait,jdbcType=BIGINT}, #{minTimerWait,jdbcType=BIGINT}, #{avgTimerWait,jdbcType=BIGINT}, 
      #{maxTimerWait,jdbcType=BIGINT}, #{sumLockTime,jdbcType=BIGINT}, #{sumErrors,jdbcType=BIGINT}, 
      #{sumWarnings,jdbcType=BIGINT}, #{sumRowsAffected,jdbcType=BIGINT}, #{sumRowsSent,jdbcType=BIGINT}, 
      #{sumRowsExamined,jdbcType=BIGINT}, #{sumCreatedTmpDiskTables,jdbcType=BIGINT}, 
      #{sumCreatedTmpTables,jdbcType=BIGINT}, #{sumSelectFullJoin,jdbcType=BIGINT}, #{sumSelectFullRangeJoin,jdbcType=BIGINT}, 
      #{sumSelectRange,jdbcType=BIGINT}, #{sumSelectRangeCheck,jdbcType=BIGINT}, #{sumSelectScan,jdbcType=BIGINT}, 
      #{sumSortMergePasses,jdbcType=BIGINT}, #{sumSortRange,jdbcType=BIGINT}, #{sumSortRows,jdbcType=BIGINT}, 
      #{sumSortScan,jdbcType=BIGINT}, #{sumNoIndexUsed,jdbcType=BIGINT}, #{sumNoGoodIndexUsed,jdbcType=BIGINT}, 
      #{sumCpuTime,jdbcType=BIGINT}, #{maxControlledMemory,jdbcType=BIGINT}, #{maxTotalMemory,jdbcType=BIGINT}, 
      #{countSecondary,jdbcType=BIGINT}, #{firstSeen,jdbcType=TIMESTAMP}, #{lastSeen,jdbcType=TIMESTAMP}, 
      #{quantile95,jdbcType=BIGINT}, #{quantile99,jdbcType=BIGINT}, #{quantile999,jdbcType=BIGINT}, 
      #{querySampleSeen,jdbcType=TIMESTAMP}, #{querySampleTimerWait,jdbcType=BIGINT}, 
      #{digestText,jdbcType=LONGVARCHAR}, #{querySampleText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ecommerce.model.EventsStatementsSummaryByDigestWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    insert into events_statements_summary_by_digest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schemaName != null">
        SCHEMA_NAME,
      </if>
      <if test="digest != null">
        DIGEST,
      </if>
      <if test="countStar != null">
        COUNT_STAR,
      </if>
      <if test="sumTimerWait != null">
        SUM_TIMER_WAIT,
      </if>
      <if test="minTimerWait != null">
        MIN_TIMER_WAIT,
      </if>
      <if test="avgTimerWait != null">
        AVG_TIMER_WAIT,
      </if>
      <if test="maxTimerWait != null">
        MAX_TIMER_WAIT,
      </if>
      <if test="sumLockTime != null">
        SUM_LOCK_TIME,
      </if>
      <if test="sumErrors != null">
        SUM_ERRORS,
      </if>
      <if test="sumWarnings != null">
        SUM_WARNINGS,
      </if>
      <if test="sumRowsAffected != null">
        SUM_ROWS_AFFECTED,
      </if>
      <if test="sumRowsSent != null">
        SUM_ROWS_SENT,
      </if>
      <if test="sumRowsExamined != null">
        SUM_ROWS_EXAMINED,
      </if>
      <if test="sumCreatedTmpDiskTables != null">
        SUM_CREATED_TMP_DISK_TABLES,
      </if>
      <if test="sumCreatedTmpTables != null">
        SUM_CREATED_TMP_TABLES,
      </if>
      <if test="sumSelectFullJoin != null">
        SUM_SELECT_FULL_JOIN,
      </if>
      <if test="sumSelectFullRangeJoin != null">
        SUM_SELECT_FULL_RANGE_JOIN,
      </if>
      <if test="sumSelectRange != null">
        SUM_SELECT_RANGE,
      </if>
      <if test="sumSelectRangeCheck != null">
        SUM_SELECT_RANGE_CHECK,
      </if>
      <if test="sumSelectScan != null">
        SUM_SELECT_SCAN,
      </if>
      <if test="sumSortMergePasses != null">
        SUM_SORT_MERGE_PASSES,
      </if>
      <if test="sumSortRange != null">
        SUM_SORT_RANGE,
      </if>
      <if test="sumSortRows != null">
        SUM_SORT_ROWS,
      </if>
      <if test="sumSortScan != null">
        SUM_SORT_SCAN,
      </if>
      <if test="sumNoIndexUsed != null">
        SUM_NO_INDEX_USED,
      </if>
      <if test="sumNoGoodIndexUsed != null">
        SUM_NO_GOOD_INDEX_USED,
      </if>
      <if test="sumCpuTime != null">
        SUM_CPU_TIME,
      </if>
      <if test="maxControlledMemory != null">
        MAX_CONTROLLED_MEMORY,
      </if>
      <if test="maxTotalMemory != null">
        MAX_TOTAL_MEMORY,
      </if>
      <if test="countSecondary != null">
        COUNT_SECONDARY,
      </if>
      <if test="firstSeen != null">
        FIRST_SEEN,
      </if>
      <if test="lastSeen != null">
        LAST_SEEN,
      </if>
      <if test="quantile95 != null">
        QUANTILE_95,
      </if>
      <if test="quantile99 != null">
        QUANTILE_99,
      </if>
      <if test="quantile999 != null">
        QUANTILE_999,
      </if>
      <if test="querySampleSeen != null">
        QUERY_SAMPLE_SEEN,
      </if>
      <if test="querySampleTimerWait != null">
        QUERY_SAMPLE_TIMER_WAIT,
      </if>
      <if test="digestText != null">
        DIGEST_TEXT,
      </if>
      <if test="querySampleText != null">
        QUERY_SAMPLE_TEXT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schemaName != null">
        #{schemaName,jdbcType=VARCHAR},
      </if>
      <if test="digest != null">
        #{digest,jdbcType=VARCHAR},
      </if>
      <if test="countStar != null">
        #{countStar,jdbcType=BIGINT},
      </if>
      <if test="sumTimerWait != null">
        #{sumTimerWait,jdbcType=BIGINT},
      </if>
      <if test="minTimerWait != null">
        #{minTimerWait,jdbcType=BIGINT},
      </if>
      <if test="avgTimerWait != null">
        #{avgTimerWait,jdbcType=BIGINT},
      </if>
      <if test="maxTimerWait != null">
        #{maxTimerWait,jdbcType=BIGINT},
      </if>
      <if test="sumLockTime != null">
        #{sumLockTime,jdbcType=BIGINT},
      </if>
      <if test="sumErrors != null">
        #{sumErrors,jdbcType=BIGINT},
      </if>
      <if test="sumWarnings != null">
        #{sumWarnings,jdbcType=BIGINT},
      </if>
      <if test="sumRowsAffected != null">
        #{sumRowsAffected,jdbcType=BIGINT},
      </if>
      <if test="sumRowsSent != null">
        #{sumRowsSent,jdbcType=BIGINT},
      </if>
      <if test="sumRowsExamined != null">
        #{sumRowsExamined,jdbcType=BIGINT},
      </if>
      <if test="sumCreatedTmpDiskTables != null">
        #{sumCreatedTmpDiskTables,jdbcType=BIGINT},
      </if>
      <if test="sumCreatedTmpTables != null">
        #{sumCreatedTmpTables,jdbcType=BIGINT},
      </if>
      <if test="sumSelectFullJoin != null">
        #{sumSelectFullJoin,jdbcType=BIGINT},
      </if>
      <if test="sumSelectFullRangeJoin != null">
        #{sumSelectFullRangeJoin,jdbcType=BIGINT},
      </if>
      <if test="sumSelectRange != null">
        #{sumSelectRange,jdbcType=BIGINT},
      </if>
      <if test="sumSelectRangeCheck != null">
        #{sumSelectRangeCheck,jdbcType=BIGINT},
      </if>
      <if test="sumSelectScan != null">
        #{sumSelectScan,jdbcType=BIGINT},
      </if>
      <if test="sumSortMergePasses != null">
        #{sumSortMergePasses,jdbcType=BIGINT},
      </if>
      <if test="sumSortRange != null">
        #{sumSortRange,jdbcType=BIGINT},
      </if>
      <if test="sumSortRows != null">
        #{sumSortRows,jdbcType=BIGINT},
      </if>
      <if test="sumSortScan != null">
        #{sumSortScan,jdbcType=BIGINT},
      </if>
      <if test="sumNoIndexUsed != null">
        #{sumNoIndexUsed,jdbcType=BIGINT},
      </if>
      <if test="sumNoGoodIndexUsed != null">
        #{sumNoGoodIndexUsed,jdbcType=BIGINT},
      </if>
      <if test="sumCpuTime != null">
        #{sumCpuTime,jdbcType=BIGINT},
      </if>
      <if test="maxControlledMemory != null">
        #{maxControlledMemory,jdbcType=BIGINT},
      </if>
      <if test="maxTotalMemory != null">
        #{maxTotalMemory,jdbcType=BIGINT},
      </if>
      <if test="countSecondary != null">
        #{countSecondary,jdbcType=BIGINT},
      </if>
      <if test="firstSeen != null">
        #{firstSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="lastSeen != null">
        #{lastSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="quantile95 != null">
        #{quantile95,jdbcType=BIGINT},
      </if>
      <if test="quantile99 != null">
        #{quantile99,jdbcType=BIGINT},
      </if>
      <if test="quantile999 != null">
        #{quantile999,jdbcType=BIGINT},
      </if>
      <if test="querySampleSeen != null">
        #{querySampleSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="querySampleTimerWait != null">
        #{querySampleTimerWait,jdbcType=BIGINT},
      </if>
      <if test="digestText != null">
        #{digestText,jdbcType=LONGVARCHAR},
      </if>
      <if test="querySampleText != null">
        #{querySampleText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ecommerce.model.EventsStatementsSummaryByDigestExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    select count(*) from events_statements_summary_by_digest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update events_statements_summary_by_digest
    <set>
      <if test="row.schemaName != null">
        SCHEMA_NAME = #{row.schemaName,jdbcType=VARCHAR},
      </if>
      <if test="row.digest != null">
        DIGEST = #{row.digest,jdbcType=VARCHAR},
      </if>
      <if test="row.countStar != null">
        COUNT_STAR = #{row.countStar,jdbcType=BIGINT},
      </if>
      <if test="row.sumTimerWait != null">
        SUM_TIMER_WAIT = #{row.sumTimerWait,jdbcType=BIGINT},
      </if>
      <if test="row.minTimerWait != null">
        MIN_TIMER_WAIT = #{row.minTimerWait,jdbcType=BIGINT},
      </if>
      <if test="row.avgTimerWait != null">
        AVG_TIMER_WAIT = #{row.avgTimerWait,jdbcType=BIGINT},
      </if>
      <if test="row.maxTimerWait != null">
        MAX_TIMER_WAIT = #{row.maxTimerWait,jdbcType=BIGINT},
      </if>
      <if test="row.sumLockTime != null">
        SUM_LOCK_TIME = #{row.sumLockTime,jdbcType=BIGINT},
      </if>
      <if test="row.sumErrors != null">
        SUM_ERRORS = #{row.sumErrors,jdbcType=BIGINT},
      </if>
      <if test="row.sumWarnings != null">
        SUM_WARNINGS = #{row.sumWarnings,jdbcType=BIGINT},
      </if>
      <if test="row.sumRowsAffected != null">
        SUM_ROWS_AFFECTED = #{row.sumRowsAffected,jdbcType=BIGINT},
      </if>
      <if test="row.sumRowsSent != null">
        SUM_ROWS_SENT = #{row.sumRowsSent,jdbcType=BIGINT},
      </if>
      <if test="row.sumRowsExamined != null">
        SUM_ROWS_EXAMINED = #{row.sumRowsExamined,jdbcType=BIGINT},
      </if>
      <if test="row.sumCreatedTmpDiskTables != null">
        SUM_CREATED_TMP_DISK_TABLES = #{row.sumCreatedTmpDiskTables,jdbcType=BIGINT},
      </if>
      <if test="row.sumCreatedTmpTables != null">
        SUM_CREATED_TMP_TABLES = #{row.sumCreatedTmpTables,jdbcType=BIGINT},
      </if>
      <if test="row.sumSelectFullJoin != null">
        SUM_SELECT_FULL_JOIN = #{row.sumSelectFullJoin,jdbcType=BIGINT},
      </if>
      <if test="row.sumSelectFullRangeJoin != null">
        SUM_SELECT_FULL_RANGE_JOIN = #{row.sumSelectFullRangeJoin,jdbcType=BIGINT},
      </if>
      <if test="row.sumSelectRange != null">
        SUM_SELECT_RANGE = #{row.sumSelectRange,jdbcType=BIGINT},
      </if>
      <if test="row.sumSelectRangeCheck != null">
        SUM_SELECT_RANGE_CHECK = #{row.sumSelectRangeCheck,jdbcType=BIGINT},
      </if>
      <if test="row.sumSelectScan != null">
        SUM_SELECT_SCAN = #{row.sumSelectScan,jdbcType=BIGINT},
      </if>
      <if test="row.sumSortMergePasses != null">
        SUM_SORT_MERGE_PASSES = #{row.sumSortMergePasses,jdbcType=BIGINT},
      </if>
      <if test="row.sumSortRange != null">
        SUM_SORT_RANGE = #{row.sumSortRange,jdbcType=BIGINT},
      </if>
      <if test="row.sumSortRows != null">
        SUM_SORT_ROWS = #{row.sumSortRows,jdbcType=BIGINT},
      </if>
      <if test="row.sumSortScan != null">
        SUM_SORT_SCAN = #{row.sumSortScan,jdbcType=BIGINT},
      </if>
      <if test="row.sumNoIndexUsed != null">
        SUM_NO_INDEX_USED = #{row.sumNoIndexUsed,jdbcType=BIGINT},
      </if>
      <if test="row.sumNoGoodIndexUsed != null">
        SUM_NO_GOOD_INDEX_USED = #{row.sumNoGoodIndexUsed,jdbcType=BIGINT},
      </if>
      <if test="row.sumCpuTime != null">
        SUM_CPU_TIME = #{row.sumCpuTime,jdbcType=BIGINT},
      </if>
      <if test="row.maxControlledMemory != null">
        MAX_CONTROLLED_MEMORY = #{row.maxControlledMemory,jdbcType=BIGINT},
      </if>
      <if test="row.maxTotalMemory != null">
        MAX_TOTAL_MEMORY = #{row.maxTotalMemory,jdbcType=BIGINT},
      </if>
      <if test="row.countSecondary != null">
        COUNT_SECONDARY = #{row.countSecondary,jdbcType=BIGINT},
      </if>
      <if test="row.firstSeen != null">
        FIRST_SEEN = #{row.firstSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="row.lastSeen != null">
        LAST_SEEN = #{row.lastSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="row.quantile95 != null">
        QUANTILE_95 = #{row.quantile95,jdbcType=BIGINT},
      </if>
      <if test="row.quantile99 != null">
        QUANTILE_99 = #{row.quantile99,jdbcType=BIGINT},
      </if>
      <if test="row.quantile999 != null">
        QUANTILE_999 = #{row.quantile999,jdbcType=BIGINT},
      </if>
      <if test="row.querySampleSeen != null">
        QUERY_SAMPLE_SEEN = #{row.querySampleSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="row.querySampleTimerWait != null">
        QUERY_SAMPLE_TIMER_WAIT = #{row.querySampleTimerWait,jdbcType=BIGINT},
      </if>
      <if test="row.digestText != null">
        DIGEST_TEXT = #{row.digestText,jdbcType=LONGVARCHAR},
      </if>
      <if test="row.querySampleText != null">
        QUERY_SAMPLE_TEXT = #{row.querySampleText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update events_statements_summary_by_digest
    set SCHEMA_NAME = #{row.schemaName,jdbcType=VARCHAR},
      DIGEST = #{row.digest,jdbcType=VARCHAR},
      COUNT_STAR = #{row.countStar,jdbcType=BIGINT},
      SUM_TIMER_WAIT = #{row.sumTimerWait,jdbcType=BIGINT},
      MIN_TIMER_WAIT = #{row.minTimerWait,jdbcType=BIGINT},
      AVG_TIMER_WAIT = #{row.avgTimerWait,jdbcType=BIGINT},
      MAX_TIMER_WAIT = #{row.maxTimerWait,jdbcType=BIGINT},
      SUM_LOCK_TIME = #{row.sumLockTime,jdbcType=BIGINT},
      SUM_ERRORS = #{row.sumErrors,jdbcType=BIGINT},
      SUM_WARNINGS = #{row.sumWarnings,jdbcType=BIGINT},
      SUM_ROWS_AFFECTED = #{row.sumRowsAffected,jdbcType=BIGINT},
      SUM_ROWS_SENT = #{row.sumRowsSent,jdbcType=BIGINT},
      SUM_ROWS_EXAMINED = #{row.sumRowsExamined,jdbcType=BIGINT},
      SUM_CREATED_TMP_DISK_TABLES = #{row.sumCreatedTmpDiskTables,jdbcType=BIGINT},
      SUM_CREATED_TMP_TABLES = #{row.sumCreatedTmpTables,jdbcType=BIGINT},
      SUM_SELECT_FULL_JOIN = #{row.sumSelectFullJoin,jdbcType=BIGINT},
      SUM_SELECT_FULL_RANGE_JOIN = #{row.sumSelectFullRangeJoin,jdbcType=BIGINT},
      SUM_SELECT_RANGE = #{row.sumSelectRange,jdbcType=BIGINT},
      SUM_SELECT_RANGE_CHECK = #{row.sumSelectRangeCheck,jdbcType=BIGINT},
      SUM_SELECT_SCAN = #{row.sumSelectScan,jdbcType=BIGINT},
      SUM_SORT_MERGE_PASSES = #{row.sumSortMergePasses,jdbcType=BIGINT},
      SUM_SORT_RANGE = #{row.sumSortRange,jdbcType=BIGINT},
      SUM_SORT_ROWS = #{row.sumSortRows,jdbcType=BIGINT},
      SUM_SORT_SCAN = #{row.sumSortScan,jdbcType=BIGINT},
      SUM_NO_INDEX_USED = #{row.sumNoIndexUsed,jdbcType=BIGINT},
      SUM_NO_GOOD_INDEX_USED = #{row.sumNoGoodIndexUsed,jdbcType=BIGINT},
      SUM_CPU_TIME = #{row.sumCpuTime,jdbcType=BIGINT},
      MAX_CONTROLLED_MEMORY = #{row.maxControlledMemory,jdbcType=BIGINT},
      MAX_TOTAL_MEMORY = #{row.maxTotalMemory,jdbcType=BIGINT},
      COUNT_SECONDARY = #{row.countSecondary,jdbcType=BIGINT},
      FIRST_SEEN = #{row.firstSeen,jdbcType=TIMESTAMP},
      LAST_SEEN = #{row.lastSeen,jdbcType=TIMESTAMP},
      QUANTILE_95 = #{row.quantile95,jdbcType=BIGINT},
      QUANTILE_99 = #{row.quantile99,jdbcType=BIGINT},
      QUANTILE_999 = #{row.quantile999,jdbcType=BIGINT},
      QUERY_SAMPLE_SEEN = #{row.querySampleSeen,jdbcType=TIMESTAMP},
      QUERY_SAMPLE_TIMER_WAIT = #{row.querySampleTimerWait,jdbcType=BIGINT},
      DIGEST_TEXT = #{row.digestText,jdbcType=LONGVARCHAR},
      QUERY_SAMPLE_TEXT = #{row.querySampleText,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 18 07:23:13 HKT 2025.
    -->
    update events_statements_summary_by_digest
    set SCHEMA_NAME = #{row.schemaName,jdbcType=VARCHAR},
      DIGEST = #{row.digest,jdbcType=VARCHAR},
      COUNT_STAR = #{row.countStar,jdbcType=BIGINT},
      SUM_TIMER_WAIT = #{row.sumTimerWait,jdbcType=BIGINT},
      MIN_TIMER_WAIT = #{row.minTimerWait,jdbcType=BIGINT},
      AVG_TIMER_WAIT = #{row.avgTimerWait,jdbcType=BIGINT},
      MAX_TIMER_WAIT = #{row.maxTimerWait,jdbcType=BIGINT},
      SUM_LOCK_TIME = #{row.sumLockTime,jdbcType=BIGINT},
      SUM_ERRORS = #{row.sumErrors,jdbcType=BIGINT},
      SUM_WARNINGS = #{row.sumWarnings,jdbcType=BIGINT},
      SUM_ROWS_AFFECTED = #{row.sumRowsAffected,jdbcType=BIGINT},
      SUM_ROWS_SENT = #{row.sumRowsSent,jdbcType=BIGINT},
      SUM_ROWS_EXAMINED = #{row.sumRowsExamined,jdbcType=BIGINT},
      SUM_CREATED_TMP_DISK_TABLES = #{row.sumCreatedTmpDiskTables,jdbcType=BIGINT},
      SUM_CREATED_TMP_TABLES = #{row.sumCreatedTmpTables,jdbcType=BIGINT},
      SUM_SELECT_FULL_JOIN = #{row.sumSelectFullJoin,jdbcType=BIGINT},
      SUM_SELECT_FULL_RANGE_JOIN = #{row.sumSelectFullRangeJoin,jdbcType=BIGINT},
      SUM_SELECT_RANGE = #{row.sumSelectRange,jdbcType=BIGINT},
      SUM_SELECT_RANGE_CHECK = #{row.sumSelectRangeCheck,jdbcType=BIGINT},
      SUM_SELECT_SCAN = #{row.sumSelectScan,jdbcType=BIGINT},
      SUM_SORT_MERGE_PASSES = #{row.sumSortMergePasses,jdbcType=BIGINT},
      SUM_SORT_RANGE = #{row.sumSortRange,jdbcType=BIGINT},
      SUM_SORT_ROWS = #{row.sumSortRows,jdbcType=BIGINT},
      SUM_SORT_SCAN = #{row.sumSortScan,jdbcType=BIGINT},
      SUM_NO_INDEX_USED = #{row.sumNoIndexUsed,jdbcType=BIGINT},
      SUM_NO_GOOD_INDEX_USED = #{row.sumNoGoodIndexUsed,jdbcType=BIGINT},
      SUM_CPU_TIME = #{row.sumCpuTime,jdbcType=BIGINT},
      MAX_CONTROLLED_MEMORY = #{row.maxControlledMemory,jdbcType=BIGINT},
      MAX_TOTAL_MEMORY = #{row.maxTotalMemory,jdbcType=BIGINT},
      COUNT_SECONDARY = #{row.countSecondary,jdbcType=BIGINT},
      FIRST_SEEN = #{row.firstSeen,jdbcType=TIMESTAMP},
      LAST_SEEN = #{row.lastSeen,jdbcType=TIMESTAMP},
      QUANTILE_95 = #{row.quantile95,jdbcType=BIGINT},
      QUANTILE_99 = #{row.quantile99,jdbcType=BIGINT},
      QUANTILE_999 = #{row.quantile999,jdbcType=BIGINT},
      QUERY_SAMPLE_SEEN = #{row.querySampleSeen,jdbcType=TIMESTAMP},
      QUERY_SAMPLE_TIMER_WAIT = #{row.querySampleTimerWait,jdbcType=BIGINT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>